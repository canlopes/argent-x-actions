name: Run Tests
on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      devnet:
        image: shardlabs/starknet-devnet:latest-seed0
        ports:
          - 5050:5050
    env:
      FILENAME: argent-extension-${{ github.ref_name }}


    steps:
      - name: Checking if we are merging into develop
        run: |
          if [ "${{ github.head_ref }}" == "" ]; then
            echo "MERGING=yes" >> $GITHUB_ENV
            echo "secretspresent=NO" >> $GITHUB_OUTPUT
          else
            echo "MERGING=no" >> $GITHUB_ENV
          fi

      - name: Merging into develop
        run: echo "merging into develop? ${{ env.MERGING }}"

      - name: Check out repository code
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Build
        run: yarn lerna run --scope @argent-x/extension build
        env:
          UPLOAD_SENTRY_SOURCEMAPS: false

      - name: Run tests
        run: yarn test

      - name: Install Playwright Browsers
        run: npx playwright install chromium

      - name: Run e2e tests
        run: xvfb-run --auto-servernum yarn test:e2e

      - name: Check bundlesize for chrome
        run: yarn run bundlewatch

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: |
            packages/extension/test-results/
            packages/extension/e2e/artifacts/playwright/
            packages/extension/e2e/artifacts/reports/
          retention-days: 5

      ## Upload build and comment PR if not merging into develop
      - name: Set filename prefix
        if: ${{ env.MERGING == 'no' }}
        run: echo "FILENAME_PREFIX=$(echo ${{ env.FILENAME }}  | tr / -)" >> $GITHUB_ENV

      - name: Create chrome zip
        if: ${{ env.MERGING == 'no' }}
        run: |
          cd packages/extension/dist
          zip -r ${{ env.FILENAME_PREFIX }}-chrome.zip ./*
          mv ${{ env.FILENAME_PREFIX }}-chrome.zip ../../../
          cd ../../../

      - name: Build Firefox version
        if: ${{ env.MERGING == 'no' }}
        run: MANIFEST_VERSION=v2 yarn --cwd packages/extension build

      - name: Create firefox zip
        if: ${{ env.MERGING == 'no' }}
        run: |
          cd packages/extension/dist
          zip -r ${{ env.FILENAME_PREFIX }}-firefox.zip ./*
          mv ${{ env.FILENAME_PREFIX }}-firefox.zip ../../../
          cd ../../../

      - name: Check bundlesize for firefox
        if: ${{ env.MERGING == 'no' }}
        run: yarn run bundlewatch

      - name: Upload artifacts for firefox
        if: ${{ env.MERGING == 'no' }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.FILENAME_PREFIX }}-firefox.zip
          path: "*-firefox.zip"
          retention-days: 5

      - name: Upload artifacts for chrome
        if: ${{ env.MERGING == 'no' }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.FILENAME_PREFIX }}-chrome.zip
          path: "*-chrome.zip"
          retention-days: 5

      - name: Set GHA_BRANCH
        if: ${{ env.MERGING == 'no' }}
        run: echo "GHA_BRANCH=$(echo $GITHUB_REF | awk -F / '{print $3}')" >> $GITHUB_ENV

      - name: comment PR
        if: ${{ env.MERGING == 'no' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INPUT_REPO: ${{ env.GHA_BRANCH }}
          INPUT_OWNER: ${{ github.repository_owner }}
        run: |
          gh pr comment ${{ env.GHA_BRANCH }} --body "[Builds for local testing](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
